## Node能够解决什么问题
-- Node的首要目标是提供一种简单的、用于创建高性能服务器的开发工具
-- Web服务器的瓶颈在于并发的用户量，对比JAVA和PHP的实现方式

## Node是什么
-- Node.js 是一个基于chrome v8引擎的Javascript运行环境让JavaScript的的执行效率与
    低端的C语言的相近的执行效率
-- Node.js使用一个事件驱动、非阻塞I/O的模型，使其轻量又高效
-- Node.js的管理器npm，是全球最大的开源库生态系统

## node的特点
-- 节约内存
-- 节约上下文（context 环境的意思）切换的时间
-- 锁的问题，并发资源的处理。

## 真正多线程如何实现的
-- 并不是真正在统一时间点执行多个任务，而是通过非常快速的切换时间片来实现的

## Node的Event Loop
-- V8引擎解析javascript脚本
-- 解析后的代码，调用NodeAPI
-- libuv库负责Node API的执行，它将不同的任务分配给不同的线程，
   形成一个Event Loop（事件循环），以异步的方式将任务的执行结构返回给V8引擎
-- V8引擎再将结果返回给用户

## 同步与异步 阻塞与非阻塞
-- 同步与异步关注的是消息通知的方式 
-- 阻塞与非阻塞关注的是等待结果时的状态
-- 同步异步取决于被调用者，阻塞非阻塞取决于调用者
-- 同步阻塞
    
-- 异步阻塞
-- 同步非阻塞
-- 异步非阻塞